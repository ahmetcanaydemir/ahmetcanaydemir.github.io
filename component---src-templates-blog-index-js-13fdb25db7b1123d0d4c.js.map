{"version":3,"file":"component---src-templates-blog-index-js-13fdb25db7b1123d0d4c.js","mappings":"qLAAA,EAAe,IAA0B,0D,UCInCA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAmCH,OAnCGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,OACE,uBACEC,MAAO,CACLC,QAAS,OACTC,cAAcC,EAAAA,EAAAA,IAAO,KAGvB,uBACEC,IAAKC,EACLC,IAAG,oBACHN,MAAO,CACLE,aAAc,EACdK,aAAaJ,EAAAA,EAAAA,IAAO,IACpBK,OAAOL,EAAAA,EAAAA,IAAO,GACdM,QAAQN,EAAAA,EAAAA,IAAO,GACfO,aAAc,SAGlB,qBACEV,MAAO,CACLW,SAAU,UAFd,mBAKmB,IACjB,qBAAGC,KAAK,6CAAR,qBANF,IAUE,2BAVF,+CAeL,EAnCGd,CAAYe,EAAAA,WAsClB,K,uDCtCMC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAuCH,OAvCGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJf,OAAA,WACE,OACE,0BACEC,MAAO,CACLe,WAAWZ,EAAAA,EAAAA,IAAO,KAClBa,YAAYb,EAAAA,EAAAA,IAAO,KAGrB,uBAAKH,MAAO,CAAEiB,MAAO,UACnB,qBAAGL,KAAK,WAAWM,OAAO,SAASC,IAAI,uBAAvC,QAIF,qBACEP,KAAK,4CACLM,OAAO,SACPC,IAAI,uBAHN,WAMK,IAjBP,IAkBS,IACP,qBACEP,KAAK,qCACLM,OAAO,SACPC,IAAI,uBAHN,UAMK,IAzBP,IA0BS,IACP,qBACEP,KAAK,0CACLM,OAAO,SACPC,IAAI,uBAHN,cASL,EAvCGL,CAAeD,EAAAA,WA0CrB,O,kCC1BA,IAlBA,YAA0C,IAAzBO,EAAwB,EAAxBA,SAAwB,IAAdpB,MAAAA,OAAc,MAAN,GAAM,EACvC,OACE,uBACEA,MAAK,eACHqB,SAAU,QACVC,OAAQ,sBACRZ,aAAc,SACda,QAAS,SACTC,WAAY,uBACZC,UAAW,YACRzB,IAGJoB,K,uDCMP,SAASM,EAAT,GAAsE,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAqB,IAAfC,KAAAA,OAAe,MAAR,KAAQ,EACnE,OACE,gBAAC,EAAAC,YAAD,CACEC,MAnBK,YAoBLnC,OAAQ,SAAAoC,GACN,IAAQC,EAAiBD,EAAKE,KAAtBD,aACFE,EAAkBR,GAAeM,EAAaN,YAC9CS,EAAYX,EAAWQ,EAAaI,QAAnB,IAA8BZ,EAAU,KACzDa,EAAG,GAAML,EAAaI,QAAUT,EACtC,OACE,gBAAC,IAAD,eACEW,eAAgB,CAAEV,KAAAA,IACbH,EACD,CACEc,cAAc,QAASP,EAAaP,MACpCA,MAAAA,GAEF,CACEA,MAAM,GAAIO,EAAaP,OAR/B,CAUEF,KAAM,CACJ,CACEiB,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,SACVD,QAASJ,GAEX,CACEK,SAAU,WACVD,QAAShB,GAASO,EAAaP,OAEjC,CACEiB,SAAU,iBACVD,QAASP,GAEX,CACEM,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAST,EAAaW,OAAOC,SAE/B,CACEJ,KAAM,gBACNC,QAAShB,GAASO,EAAaP,OAEjC,CACEe,KAAM,sBACNC,QAASP,IAGVW,OACCV,EACI,CACE,CACEO,SAAU,WACVD,QAASN,GAEX,CACEK,KAAM,gBACNC,QAASN,IAGb,IAELU,OAAOtB,SAQtBD,EAAIwB,aAAe,CACjBvB,KAAM,GACNE,MAAO,GACPE,KAAM,IAWR,O,sJCnGMoB,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA6DH,OA7DGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJpD,OAAA,WACE,IAAMqD,EAAYC,GAAAA,CAAIC,KAAM,sCACtBC,EAAUD,KAAKE,MAAMC,YAAYF,QAEjCG,EAAQL,GAAAA,CAAIC,KAAM,sCAExB,OACE,gBAAC,IAAD,CAAQK,SAAUL,KAAKE,MAAMG,SAAU9B,MAAOuB,GAC5C,gBAAC,IAAD,MACA,6BACE,gBAAC,IAAD,OAEF,4BACA,sBACIpD,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,GACrBY,UAAW,EACXO,OAAQ,EACRrB,QAAS,SALf,SAUGyD,EAAME,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNhC,EAAQwB,GAAAA,CAAIQ,EAAM,sBAAwBA,EAAKC,OAAO/B,KAC5D,OACE,2BAASgC,IAAKF,EAAKC,OAAO/B,MACxB,8BACE,sBACE/B,MAAO,CACLgE,WAAY,yBACZ3C,UAAUlB,EAAAA,EAAAA,IAAO,GACjBD,cAAcC,EAAAA,EAAAA,IAAO,EAAI,GACzB8D,cAAc,EACd3C,OAAO,SAGT,gBAAC,EAAA4C,KAAD,CACElE,MAAO,CAAEmE,UAAW,QACpBC,GAAIP,EAAKC,OAAO/B,KAChBZ,IAAI,YAEHU,IAGL,8BACGwC,EAAAA,EAAAA,GAAeR,EAAKS,YAAYC,KAAMhB,GADzC,OAESiB,EAAAA,EAAAA,GAAkBX,EAAKY,cAGlC,qBACEC,wBAAyB,CAAEC,OAAQd,EAAKS,YAAYM,gBAM9D,gBAAC,IAAD,QAGL,EA7DGzB,CAA0BtC,EAAAA,WAgEhC,a,0FC5EO,SAAS2D,EAAkBK,GAChC,OAAUA,EAAV,YAIK,SAASR,EAAeE,EAAMvC,GAAO,IAAD,EACzC,GAAiD,mBAAtC8C,KAAKC,UAAUC,mBACxB,OAAOT,EAGTA,EAAO,IAAIO,KAAKP,GAChB,IAAMU,EAAO,CACXjD,EACA,CAAEkD,IAAK,UAAWC,MAAO,OAAQC,KAAM,YACvCC,OAAOC,SACT,OAAO,EAAAf,GAAKS,mBAAL,gBAA2BC","sources":["webpack://ahmetcanaydemircom/./src/assets/profile-pic.jpg","webpack://ahmetcanaydemircom/./src/components/Bio.js","webpack://ahmetcanaydemircom/./src/components/Footer.js","webpack://ahmetcanaydemircom/./src/components/Panel.js","webpack://ahmetcanaydemircom/./src/components/SEO.js","webpack://ahmetcanaydemircom/./src/templates/blog-index.js","webpack://ahmetcanaydemircom/./src/utils/helpers.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/profile-pic-a7e6f09e74346211c0c48d9c8b0ae26a.jpg\";","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Ahmet Can aydemir`}\n          style={{\n            marginBottom: 0,\n            marginRight: rhythm(1 / 2),\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p\n          style={{\n            maxWidth: '420px',\n          }}\n        >\n          Personal blog by{' '}\n          <a href=\"https://mobile.twitter.com/ahmetcnaydemir\">\n            Ahmet Can Aydemir\n          </a>\n          .\n          <br />\n          My thoughts about Programming and things.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/ahmetcnaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://linkedin.com/in/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          linkedin\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <div\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s â€” ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title}`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n        <h1\n            style={{\n              marginBottom: rhythm(1),\n              marginTop: 0,\n              border: 0,\n              display: \"none\"\n            }}\n          >\n            About\n          </h1>\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h2\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                      paddingBottom:0,\n                      border:'none'\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: 'none' }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h2>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n","export function formatReadingTime(minutes) {\n  return `${minutes} min read`;\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n"],"names":["Bio","render","style","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","borderRadius","maxWidth","href","React","Footer","marginTop","paddingTop","float","target","rel","children","fontSize","border","padding","background","wordBreak","SEO","meta","image","title","description","slug","lang","StaticQuery","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","BlogIndexTemplate","siteTitle","get","this","langKey","props","pageContext","posts","location","map","node","fields","key","fontFamily","paddingBottom","Link","boxShadow","to","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","minutes","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean"],"sourceRoot":""}