{"version":3,"file":"component---src-pages-watched-js-532656bc23361b9cd4dd.js","mappings":"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","sources":["webpack://ahmetcanaydemircom/./src/assets/profile-pic.jpg","webpack://ahmetcanaydemircom/./src/components/Bio.js","webpack://ahmetcanaydemircom/./src/components/Footer.js","webpack://ahmetcanaydemircom/./src/components/SEO.js","webpack://ahmetcanaydemircom/./src/pages/watched.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/profile-pic-a7e6f09e74346211c0c48d9c8b0ae26a.jpg\";","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Ahmet Can Aydemir`}\n          style={{\n            marginBottom: 0,\n            marginRight: rhythm(1 / 2),\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p\n          style={{\n            maxWidth: '420px',\n          }}\n        >\n          Personal blog by{' '}\n          <a href=\"https://mobile.twitter.com/ahmetcnaydemir\">\n            Ahmet Can Aydemir\n          </a>\n          .\n          <br />\n          My thoughts about Programming and things.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/ahmetcnaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://linkedin.com/in/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          linkedin\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://dev.to/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          dev.to\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s â€” ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title}`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm, scale } from '../utils/typography';\n\nclass WatchedIndex extends React.Component {\n  render() {\n    const langKey = this.props.pageContext.langKey;\n\n    const watched = get(this, 'props.data.allWatchedCsv.nodes');\n    const movieCount = watched.filter(node => node.Title_Type === 'movie')\n      .length;\n    const getMovies = type => {\n      return watched\n        .filter(node => node.Title_Type === type)\n        .map(node => {\n          return (\n            <article key={node.Const}>\n              <header>\n                <h4\n                  style={{\n                    fontSize: rhythm(0.6),\n                    marginBottom: rhythm(1 / 14),\n                  }}\n                >\n                  <a\n                    href={`https://www.imdb.com/title/${node.Const}/`}\n                    target=\"_blank\"\n                    rel=\"noopener no referrer\"\n                  >\n                    {node.Title}\n                  </a>\n                </h4>\n                <small>\n                  {`${node.Year} â€¢ ${node.Runtime} minutes${ratingToStar(\n                    node.Your_Rating\n                  )}`} / <span style={{ fontSize: rhythm(0.4)}}>10</span>\n                </small>\n              </header>\n            </article>\n          );\n        });\n    };\n    const ratingToStar = rating => {\n      if (Number(rating)) {\n        return ` â€¢ â˜… ${Number(rating)}`;\n      }\n      return '';\n    };\n    return (\n      <Layout location={this.props.location} title=\"Watched\">\n        <SEO />\n        <main>\n          <h1\n            style={{\n              marginBottom: 0,\n              marginTop: 0,\n              border: 0,\n            }}\n          >\n            Watched\n          </h1>\n          Movies and tv series I rated on IMDB.\n          <h3 style={{ marginBottom: rhythm(0.2) }}>Movies ({movieCount})</h3>\n          <hr />\n          {getMovies('movie')}\n          <h3 style={{ marginBottom: rhythm(0.2) }}>\n            Series ({watched.length - movieCount})\n          </h3>\n          <hr />\n          {getMovies('tvSeries')}\n          {getMovies('tvMiniSeries')}\n        </main>\n\n        <aside style={{ marginTop: rhythm(3) }}>\n          <Bio />\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default WatchedIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allWatchedCsv(sort: { fields: Date_Rated, order: DESC }) {\n      nodes {\n        Const\n        Runtime\n        Title\n        Title_Type\n        Year\n        Your_Rating\n      }\n    }\n  }\n`;\n"],"names":["Bio","render","style","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","borderRadius","maxWidth","href","React","Footer","marginTop","paddingTop","float","target","rel","SEO","meta","image","title","description","slug","lang","StaticQuery","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","WatchedIndex","this","props","pageContext","langKey","watched","get","movieCount","filter","node","Title_Type","length","getMovies","type","map","key","Const","fontSize","Title","Year","Runtime","ratingToStar","Your_Rating","rating","Number","location","border"],"sourceRoot":""}