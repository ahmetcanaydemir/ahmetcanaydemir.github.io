{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/tr/git-hooks-enforce-commit-message-and-branch-name/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Ahmet Can Aydemir","author":"Ahmet Can Aydemir"}},"markdownRemark":{"id":"bede9a25-6357-592b-9616-a0a532e917ef","html":"<p>Takımınızda bazı şeyleri standart hale getirmek istiyorsanız, katı kurallar uygulamanız gerekebilir. Git bağlamında bazı kurallar şöyle olabilir:</p>\n<ul>\n<li>Branch isimleri ISSUE-0000/feature-name şeklinde olmalıdır.</li>\n<li>Commit mesajları ISSUE-0000 (Jira issue id) ile başlamalıdır.</li>\n</ul>\n<p>Bu yazıda bahsettiğim iki kuralı git hooks kullanarak nasıl ekleyebileceğimizi göstereceğim.</p>\n<hr>\n<p>Farklı aşamalarda çalışan bazı <a href=\"https://git-scm.com/docs/githooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">git hookları</a> bulunuyor. Biz yukarıda bahsettiğim kurallar için aşağıdaki iki client side hookunu kullanacağız:</p>\n<ul>\n<li><strong>pre-commit:</strong> Bu hook git-commit tarafından tetiklenir ve `—no-verify’ argümanı ile atlanabilir. Commit öncesinde branch adını adını kontrol etmek için bu hooku kullanacağız.</li>\n<li><strong>commit-msg:</strong> Bu hook git-commit ve git-merge tarafından tetiklenir ve `—no-verify’ argümanı ile atlanabilir. Bu hooku commit mesajını kontrol etmek için kullanacağız. Ve gerekirse commit mesajını değiştireceğiz.</li>\n</ul>\n<h2 id=\"hook-klasörünü-oluşturma\" style=\"position:relative;\"><a href=\"#hook-klas%C3%B6r%C3%BCn%C3%BC-olu%C5%9Fturma\" aria-label=\"hook klasörünü oluşturma permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hook Klasörünü Oluşturma</h2>\n<p>Ana dizinde <code class=\"language-text\">hook</code> isimli bir klasör ve aşağıdaki şekildeki gibi hook dosyalarını oluşturun.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ~/hooks\n<span class=\"token builtin class-name\">cd</span> ~/hooks\n\n<span class=\"token function\">touch</span> pre-commit\n<span class=\"token function\">chmod</span> +x pre-commit\n\n<span class=\"token function\">touch</span> commit-msg\n<span class=\"token function\">chmod</span> +x commit-msg</code></pre></div>\n<hr>\n<h2 id=\"branch-i̇simlerini-kısıtlama\" style=\"position:relative;\"><a href=\"#branch-i%CC%87simlerini-k%C4%B1s%C4%B1tlama\" aria-label=\"branch i̇simlerini kısıtlama permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Branch İsimlerini Kısıtlama</h2>\n<p>Branch isimlerini ISSUE-0000/feature-name diye kabul edeceğiz ancak <code class=\"language-text\">main</code>, <code class=\"language-text\">develop</code>, <code class=\"language-text\">release</code> gibi diğer branch isimlerini de göz önünde bulundurmalıyız. Bunun için aşağıdaki regexi kullanabiliriz.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">REGEX_ISSUE_ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"^(ISSUE-[0-9]+\\/([a-zA-Z0-9]|-)+|develop|main|release\"</span></code></pre></div>\n<p>Bir de branch ismine ihtiyacımız var. Onu da aşağıdaki komutla elde edbiliyoruz.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rev-parse --abbrev-ref HEAD</code></pre></div>\n<p>Bu kadar! Regex ve branch adımız var. “ISSUE-0000/feature-name” veya “develop” veya “main” veya “release” ile başlayan branch ismini kontrol edeceğiz. Kontrolümüz başarısız olursa, hata mesajımızı yazıp <code class=\"language-text\">exit code 1</code> ile çıkacağız.</p>\n<p><code class=\"language-text\">pre-commit</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token assign-left variable\">REGEX_ISSUE_ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"^(ISSUE-[0-9]+\\/([a-zA-Z0-9]|-)+|develop|main|release\"</span>\n\n<span class=\"token assign-left variable\">ISSUE_ID_IN_BRANCH</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token punctuation\">$(</span>git rev-parse --abbrev-ref HEAD<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -o -E <span class=\"token string\">\"<span class=\"token variable\">$REGEX_ISSUE_ID</span>\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$ISSUE_ID_IN_BRANCH</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[pre-commit-hook] Your branch name is illegal. Please rename your branch with using following regex: <span class=\"token variable\">$REGEX_ISSUE_ID</span>\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<hr>\n<h2 id=\"commit-mesajlarını-kısıtlama\" style=\"position:relative;\"><a href=\"#commit-mesajlar%C4%B1n%C4%B1-k%C4%B1s%C4%B1tlama\" aria-label=\"commit mesajlarını kısıtlama permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commit Mesajlarını Kısıtlama</h2>\n<p>Adımlar önceki adıma çok benziyor. Ama commit mesajında Jira issue id yoksa, branch adına bakıp oradan almaya çalışacağız. Branch adında da bulamazsak hata fırlatacağız.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">REGEX_ISSUE_ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"^(ISSUE-[0-9]+|Merge|hotfix)\"</span></code></pre></div>\n<p>İlk argüman <code class=\"language-text\">$1</code> bize commit-msg dosyası veriyor. Aşağıdaki komutla commit mesajını okuyabiliriz:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span></code></pre></div>\n<p>Regex ve commit mesajımız var ve son adımdan branch adını nasıl alacağımızı biliyoruz. “ISSUE-0000” veya “Merge” veya “hotfix” ile başlayan commit mesajı olup olmadığını kontrol edeceğiz.</p>\n<p>Commit mesajı kontrolü başarısız olursa, branch adını kontrol edeceğiz ve issue id’yi ayrıştıracağız ve commit mesajına ekleyeceğiz.</p>\n<p>Kontrolümüz tekrar başarısız olursa, hata mesajımızı yazıp <code class=\"language-text\">exit code 1</code> ile çıkacağız.</p>\n<p><code class=\"language-text\">commit-msg</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token assign-left variable\">REGEX_ISSUE_ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"^(ISSUE-[0-9]+|Merge|hotfix)\"</span>\n<span class=\"token assign-left variable\">ISSUE_ID_IN_COMMIT</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token punctuation\">$(</span>cat <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -o -E <span class=\"token string\">\"<span class=\"token variable\">$REGEX_ISSUE_ID</span>\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$ISSUE_ID_IN_COMMIT</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">BRANCH_NAME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">git</span> symbolic-ref --short HEAD<span class=\"token variable\">)</span></span>\n    <span class=\"token assign-left variable\">ISSUE_ID</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$BRANCH_NAME</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -o -E <span class=\"token string\">\"<span class=\"token variable\">$REGEX_ISSUE_ID</span>\"</span><span class=\"token variable\">)</span></span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$ISSUE_ID</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[commit-msg-hook] Your commit message is illegal. Please rename your branch with using following regex: <span class=\"token variable\">$REGEX_ISSUE_ID</span>\"</span>\n        <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ISSUE_ID</span> | <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">></span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<hr>\n<h2 id=\"kullanım\" style=\"position:relative;\"><a href=\"#kullan%C4%B1m\" aria-label=\"kullanım permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kullanım</h2>\n<p>Proje klasörüne gidin ve hookları kullanmak için aşağıdaki komutu çalıştırın. Hook kullanmak istediğiniz her proje için bunu yapmanız gerekir.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>your-team-repository<span class=\"token operator\">></span>\n<span class=\"token function\">git</span> config core.hooksPath ~/hooks</code></pre></div>\n<hr>\n<h2 id=\"takım-arkadaşlarınızla-paylaşma\" style=\"position:relative;\"><a href=\"#tak%C4%B1m-arkada%C5%9Flar%C4%B1n%C4%B1zla-payla%C5%9Fma\" aria-label=\"takım arkadaşlarınızla paylaşma permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Takım Arkadaşlarınızla Paylaşma</h2>\n<p><code class=\"language-text\">~/hooks</code> klasörünüzü paylaşmanız gerekiyor. Bir git deposu oluşturup oradan paylaşabilirsiniz veya klasörü doğrudan ekibinize gönderebilirsiniz.</p>","timeToRead":3,"frontmatter":{"title":"Git Hooks: Branch Adı ve Commit Mesajına Kural Ekleme","date":"December 01, 2021","spoiler":"Git hooklarıyla branch ve commit için kurallar koyun"},"fields":{"slug":"/tr/git-hooks-enforce-commit-message-and-branch-name/","langKey":"tr"}}},"pageContext":{"slug":"/tr/git-hooks-enforce-commit-message-and-branch-name/","translations":["tr"],"translatedLinks":[]}},
    "staticQueryHashes": ["336482444"]}