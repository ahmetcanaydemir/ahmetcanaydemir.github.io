{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/pages/watched.js"],"names":["Footer","render","style","marginTop","rhythm","paddingTop","float","href","target","rel","React","Component","WatchedIndex","this","props","pageContext","langKey","watched","get","movieCount","filter","node","Title_Type","length","getMovies","type","map","title","Title","key","fontSize","marginBottom","Const","Year","Runtime","ratingToStar","Your_Rating","rating","Number","Array","fill","join","location","border"],"mappings":"6IAIMA,E,kGACJC,OAAA,WACE,OACE,4BACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,WAAYD,YAAO,KAGrB,yBAAKF,MAAO,CAAEI,MAAO,UACnB,uBAAGC,KAAK,WAAWC,OAAO,SAASC,IAAI,uBAAvC,QAIF,uBACEF,KAAK,4CACLC,OAAO,SACPC,IAAI,uBAHN,WAMK,IAjBP,IAkBS,IACP,uBACEF,KAAK,qCACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IAzBP,IA0BS,IACP,uBACEF,KAAK,0CACLC,OAAO,SACPC,IAAI,uBAHN,c,GA9BaC,IAAMC,WA0CZX,O,iMClCTY,E,kGACJX,OAAA,WACkBY,KAAKC,MAAMC,YAAYC,QAAvC,IAEMC,EAAUC,IAAIL,KAAM,kCACpBM,EAAaF,EAAQG,QAAO,SAAAC,GAAI,MAAwB,UAApBA,EAAKC,cAC5CC,OACGC,EAAY,SAAAC,GAChB,OAAOR,EACJG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAAeG,KACnCC,KAAI,SAAAL,GACH,IAAMM,EAAK,GAAMN,EAAKO,MACtB,OACE,6BAASC,IAAKF,GACZ,gCACE,wBACEzB,MAAO,CACL4B,SAAU1B,YAAO,IACjB2B,aAAc3B,YAAO,EAAI,MAG3B,uBACEG,KAAI,8BAAgCc,EAAKW,MAArC,IACJxB,OAAO,SACPC,IAAI,wBAEHkB,IAGL,+BACMN,EAAKY,KADX,MACqBZ,EAAKa,QAD1B,WAC4CC,EACxCd,EAAKe,oBAQfD,EAAe,SAAAE,GACnB,OAAIC,OAAOD,GACH,MAAO,IAAIE,MAAMD,OAAOD,IAAW,GAAGG,KAAK,KAAKC,KAAK,IAEtD,IAET,OACE,kBAAC,IAAD,CAAQC,SAAU7B,KAAKC,MAAM4B,SAAUf,MAAM,WAC3C,kBAAC,IAAD,MACA,8BACE,wBACEzB,MAAO,CACL6B,aAAc,EACd5B,UAAW,EACXwC,OAAQ,IAJZ,WADF,wCAWE,wBAAIzC,MAAO,CAAE6B,aAAc3B,YAAO,MAAlC,WAAmDe,EAAnD,KACA,6BACCK,EAAU,SACX,wBAAItB,MAAO,CAAE6B,aAAc3B,YAAO,MAAlC,WACWa,EAAQM,OAASJ,EAD5B,KAGA,6BACCK,EAAU,YACVA,EAAU,iBAGb,2BAAOtB,MAAO,CAAEC,UAAWC,YAAO,KAChC,kBAAC,IAAD,S,GAvEiBM,IAAMC,WA8ElBC","file":"component---src-pages-watched-js-8f74cb7df0a48b9f4f1f.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/ahmetcnaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://linkedin.com/in/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          linkedin\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm, scale } from '../utils/typography';\n\nclass WatchedIndex extends React.Component {\n  render() {\n    const langKey = this.props.pageContext.langKey;\n\n    const watched = get(this, 'props.data.allWatchedCsv.nodes');\n    const movieCount = watched.filter(node => node.Title_Type === 'movie')\n      .length;\n    const getMovies = type => {\n      return watched\n        .filter(node => node.Title_Type === type)\n        .map(node => {\n          const title = `${node.Title}`;\n          return (\n            <article key={title}>\n              <header>\n                <h4\n                  style={{\n                    fontSize: rhythm(0.6),\n                    marginBottom: rhythm(1 / 14),\n                  }}\n                >\n                  <a\n                    href={`https://www.imdb.com/title/${node.Const}/`}\n                    target=\"_blank\"\n                    rel=\"noopener no referrer\"\n                  >\n                    {title}\n                  </a>\n                </h4>\n                <small>\n                  {`${node.Year} • ${node.Runtime} minutes${ratingToStar(\n                    node.Your_Rating\n                  )}`}\n                </small>\n              </header>\n            </article>\n          );\n        });\n    };\n    const ratingToStar = rating => {\n      if (Number(rating)) {\n        return ` • ${new Array(Number(rating) || 0).fill('★').join('')}`;\n      }\n      return '';\n    };\n    return (\n      <Layout location={this.props.location} title=\"Watched\">\n        <SEO />\n        <main>\n          <h1\n            style={{\n              marginBottom: 0,\n              marginTop: 0,\n              border: 0,\n            }}\n          >\n            Watched\n          </h1>\n          Movies and tv series I rated on IMDB.\n          <h3 style={{ marginBottom: rhythm(0.2) }}>Movies ({movieCount})</h3>\n          <hr />\n          {getMovies('movie')}\n          <h3 style={{ marginBottom: rhythm(0.2) }}>\n            Series ({watched.length - movieCount})\n          </h3>\n          <hr />\n          {getMovies('tvSeries')}\n          {getMovies('tvMiniSeries')}\n        </main>\n\n        <aside style={{ marginTop: rhythm(3) }}>\n          <Bio />\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default WatchedIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allWatchedCsv(sort: { fields: Date_Rated, order: DESC }) {\n      nodes {\n        Const\n        Runtime\n        Title\n        Title_Type\n        Year\n        Your_Rating\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}