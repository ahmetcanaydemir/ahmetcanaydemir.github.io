{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/pages/books.js"],"names":["Footer","render","style","marginTop","rhythm","paddingTop","float","href","target","rel","React","Component","BooksIndex","this","props","pageContext","langKey","books","get","getBooks","shelf","filter","node","Exclusive_Shelf","map","title","Title","key","fontSize","marginBottom","Author_l_f","Publisher","Number_of_Pages","ratingToStar","My_Rating","rating","Number","Array","fill","join","location","border"],"mappings":"4IAIMA,E,kGACJC,OAAA,WACE,OACE,4BACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,WAAYD,YAAO,KAGrB,yBAAKF,MAAO,CAAEI,MAAO,UACnB,uBAAGC,KAAK,WAAWC,OAAO,SAASC,IAAI,uBAAvC,QAIF,uBACEF,KAAK,4CACLC,OAAO,SACPC,IAAI,uBAHN,WAMK,IAjBP,IAkBS,IACP,uBACEF,KAAK,qCACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IAzBP,IA0BS,IACP,uBACEF,KAAK,0CACLC,OAAO,SACPC,IAAI,uBAHN,c,GA9BaC,IAAMC,WA0CZX,O,iMClCTY,E,kGACJX,OAAA,WACkBY,KAAKC,MAAMC,YAAYC,QAAvC,IAEMC,EAAQC,IAAIL,KAAM,gCAClBM,EAAW,SAAAC,GACf,OAAOH,EACJI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,kBAAoBH,KACxCI,KAAI,SAAAF,GACH,IAAMG,EAAK,GAAMH,EAAKI,MACtB,OACE,6BAASC,IAAKF,GACZ,gCACE,wBACEvB,MAAO,CACL0B,SAAUxB,YAAO,IACjByB,aAAczB,YAAO,EAAI,MAG1BqB,GAEH,+BACMH,EAAKQ,WADX,MAC2BR,EAAKS,UADhC,MAEIT,EAAKU,gBAFT,SAGWC,EAAaX,EAAKY,kBAOnCD,EAAe,SAAAE,GACnB,OAAIC,OAAOD,GACH,MAAO,IAAIE,MAAMD,OAAOD,IAAW,GAAGG,KAAK,KAAKC,KAAK,IAEtD,IAET,OACE,kBAAC,IAAD,CAAQC,SAAU3B,KAAKC,MAAM0B,SAAUf,MAAM,SAC3C,kBAAC,IAAD,MACA,8BACE,wBACEvB,MAAO,CACL2B,aAAc,EACd1B,UAAW,EACXsC,OAAQ,IAJZ,SASA,wBAAIvC,MAAO,CAAE2B,aAAczB,YAAO,MAAlC,WACA,6BACCe,EAAS,qBACV,wBAAIjB,MAAO,CAAE2B,aAAczB,YAAO,MAAlC,UACA,6BACCe,EAAS,QACV,wBAAIjB,MAAO,CAAE2B,aAAczB,YAAO,MAAlC,WACA,6BACCe,EAAS,YAGZ,2BAAOjB,MAAO,CAAEC,UAAWC,YAAO,KAChC,kBAAC,IAAD,S,GA9DeM,IAAMC,WAqEhBC","file":"component---src-pages-books-js-4598acbffb6b201664e8.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/ahmetcnaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://linkedin.com/in/ahmetcanaydemir\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          linkedin\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm, scale } from '../utils/typography';\n\nclass BooksIndex extends React.Component {\n  render() {\n    const langKey = this.props.pageContext.langKey;\n\n    const books = get(this, 'props.data.allBooksCsv.nodes');\n    const getBooks = shelf => {\n      return books\n        .filter(node => node.Exclusive_Shelf === shelf)\n        .map(node => {\n          const title = `${node.Title}`;\n          return (\n            <article key={title}>\n              <header>\n                <h4\n                  style={{\n                    fontSize: rhythm(0.6),\n                    marginBottom: rhythm(1 / 14),\n                  }}\n                >\n                  {title}\n                </h4>\n                <small>\n                  {`${node.Author_l_f} • ${node.Publisher} • ${\n                    node.Number_of_Pages\n                  } pages${ratingToStar(node.My_Rating)}`}\n                </small>\n              </header>\n            </article>\n          );\n        });\n    };\n    const ratingToStar = rating => {\n      if (Number(rating)) {\n        return ` • ${new Array(Number(rating) || 0).fill('★').join('')}`;\n      }\n      return '';\n    };\n    return (\n      <Layout location={this.props.location} title=\"Books\">\n        <SEO />\n        <main>\n          <h1\n            style={{\n              marginBottom: 0,\n              marginTop: 0,\n              border: 0,\n            }}\n          >\n            Books\n          </h1>\n          <h3 style={{ marginBottom: rhythm(0.2) }}>Reading</h3>\n          <hr />\n          {getBooks('currently-reading')}\n          <h3 style={{ marginBottom: rhythm(0.2) }}>Readed</h3>\n          <hr />\n          {getBooks('read')}\n          <h3 style={{ marginBottom: rhythm(0.2) }}>To-Read</h3>\n          <hr />\n          {getBooks('to-read')}\n        </main>\n\n        <aside style={{ marginTop: rhythm(3) }}>\n          <Bio />\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BooksIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allBooksCsv(sort: { fields: Date_Added, order: DESC }) {\n      nodes {\n        Publisher\n        Author_l_f\n        Title\n        My_Rating\n        Number_of_Pages\n        Exclusive_Shelf\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}